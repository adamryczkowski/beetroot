Szkic programu:

1. W CMakeLists wszystkie wołania do get_target mogą być tylko obietnicą i nigdy faktycznie nie tworzą FEATUREBASE.
2. Biorę listę wszystkich FEATUREBASE_ID (F_INSTANCES) które nie są zawarte w liście COMPAT_INSTANCES(FEATUREBASE) 
   i upewniam się, że wszystkie FEATURES są zgodne z listą FEATURES zapamiętaną w FEATUREBASE:
   1. Biorę kolejny INSTANCE_ID. 
   2. Wywołuję PROMUJ(INSTANCE_ID FEATUREBASE_ID)
   2. Czy features wymagane dla naszego INSTANCE_ID są takie same, jak te z FEATUREBASE? Jeśli tak -> 5
   3. Czy I_FEATURES(INSTANCE_ID) są większe niż F_FEATURES(FEATUREBASE)? Jeśli tak, to iteruję się po wszystkich dotychczasowych kompatybilnych instancjach COMPAT_INSTANCES i je promuję do I_FEATURES(INSTANCE_ID)
   4. Czy features INSTANCE_ID są mniejsze niż FEATUREBASE? Jeśli tak, to promuję INSTANCE_ID do F_FEATURES(FEATUREBASE)
   5. Dodaję INSTANCE_ID do listy COMPAT_INSTANCES(FEATUREBASE)

PROMUJ(INSTANCE_ID FEATUREBASE_ID):
   0. set(PROMUJ_INSTANCE=0)
   0. set(PROMUJ_FEATUREBASE=0)
   1. Zbieram listę wszystkich features w INSTANCE_ID (_retrieve_instance_args(INSTANCE_ID I_FEATURES I_ARGS))
   2. Zbieram listę wszystkich features w FEATUREBASE_ID (_retrieve_featurebase_args(FEATUREBASE_ID F_FEATURES F_ARGS))
   3. Dla danego featurebase pobieram __PARS
   4. Wywołuję _make_promoted_featureset(${__FILE_HASH} "${${__PARS}__LIST}" __PARS __I_ARGS __F_ARGS __NEW_ARGS __OUT_RELATION).
   5. Jeśli __OUT_RELATION==4 => Błąd promocji. Informuję użytkownika o konflikcie spowodowanym zmiennymi ${__NEW_ARGS__LIST}.
   5. RELATION == 1 -> PROMUJ_INSTANCE:=1
   6. RELATION == 2 -> PROMUJ_FEATUREBASE:=1
   7. RELATION == 3 -> PROMUJ_INSTANCE:=1 oraz PROMUJ_FEATUREBASE:=1
   8. Odpowiednio promuj instance i/lub featurebase. Promowanie featurebase oznacza promowanie wszystkich jego instancji, jakie można znaleźć pod COMPAT_INSTANCES(FEATUREBASE_ID).
   
FEATURE_RELATION(ARG1 ARG2 CONTAINER TYPE OUT_RELATION):
funkcja, która dla features ARG1 i ARG2 sprawdza, w którą stronę zachodzi relacja:
0 - ARG1 === ARG2
1 - ARG1 jest większe od ARG2
2 - ARG1 < ARG2
3 - ARG1 != ARG2 (brak kompatybilności)
